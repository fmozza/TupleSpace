import socket
import struct
import time

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
sock.connect(("localhost", 12345))

message = b"Hello"
msg = struct.pack(">I", 4 + len(message)) + message
print(f"Sending message, length: {len(msg)}")
sock.sendall(msg)
time.sleep(1)  # Ensure server reads all

length_data = b""
while len(length_data) < 4:
    chunk = sock.recv(4 - len(length_data))
    if not chunk:
        print("Server closed connection early")
        break
    length_data += chunk
print(f"Received length data: {len(length_data)} bytes, raw: {length_data.hex()}")
length = struct.unpack(">I", length_data)[0]
print(f"Expected response length: {length}")

resp_data = b""
while len(resp_data) < length:
    chunk = sock.recv(length - len(resp_data))
    if not chunk:
        print("Server closed connection early during response")
        break
    resp_data += chunk
print(f"Received response data: {len(resp_data)} bytes: {resp_data}")
nonce = resp_data[:4]  # Using 4 as a dummy nonce for echo
message = resp_data[4:]
print(f"Client received: {message.decode()}")

sock.close()